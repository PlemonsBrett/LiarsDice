name: Build and Deploy Documentation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allow manual triggering
    inputs:
      deploy_to_pages:
        description: 'Deploy documentation to GitHub Pages'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install documentation tools
      run: |
        sudo apt-get update
        sudo apt-get install -y doxygen graphviz
        python -m pip install --upgrade pip
        pip install -r docs/requirements.txt
        
    - name: Create minimal build structure
      run: |
        mkdir -p build/docs
        # Verify required files exist
        if [ ! -f "docs/sphinx/conf.py" ]; then
          echo "Error: docs/sphinx/conf.py not found"
          exit 1
        fi
        if [ ! -f "docs/requirements.txt" ]; then
          echo "Error: docs/requirements.txt not found"
          exit 1
        fi
        
    - name: Build Sphinx documentation
      run: |
        cd docs/sphinx
        sphinx-build -b html . ../../build/docs/html
        
    - name: Build Doxygen documentation
      run: |
        # Create minimal Doxyfile for CI
        cat > Doxyfile.ci << 'EOF'
        PROJECT_NAME = "LiarsDice Game Engine"
        PROJECT_NUMBER = "1.0.0"
        OUTPUT_DIRECTORY = build/docs/api
        INPUT = include/ src/ apps/ examples/
        RECURSIVE = YES
        GENERATE_HTML = YES
        GENERATE_LATEX = NO
        EXTRACT_ALL = YES
        QUIET = YES
        WARN_IF_UNDOCUMENTED = NO
        EOF
        
        doxygen Doxyfile.ci
        
    - name: Combine documentation
      run: |
        # Copy API docs into main docs
        if [ -d "build/docs/api/html" ]; then
          mkdir -p build/docs/html/api
          cp -r build/docs/api/html/* build/docs/html/api/
        fi
        
        # Create index redirect if needed
        if [ ! -f "build/docs/html/index.html" ]; then
          echo '<meta http-equiv="refresh" content="0; url=./index.html">' > build/docs/html/index.html
        fi
        
    - name: Setup Pages
      if: |
        github.ref == 'refs/heads/main' || 
        (github.event_name == 'workflow_dispatch' && github.event.inputs.deploy_to_pages == 'true')
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      if: |
        github.ref == 'refs/heads/main' || 
        (github.event_name == 'workflow_dispatch' && github.event.inputs.deploy_to_pages == 'true')
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./build/docs/html

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-docs
    # Deploy if:
    # 1. It's a push to main branch, OR
    # 2. It's a manual workflow dispatch with deploy_to_pages set to 'true'
    if: |
      github.ref == 'refs/heads/main' || 
      (github.event_name == 'workflow_dispatch' && github.event.inputs.deploy_to_pages == 'true')
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4